{"version":3,"sources":["components/feereceipt/FeeReceipt.module.css","components/students/list/StudentList.module.css","static/images/GSS-PNG.png","components/header/Header.js","components/sidenav/Sidenav.js","servers.js","components/common/AddressForm.js","components/common/OptionConfig.js","components/students/AdmissionForm.js","components/feereceipt/FeeReceipt.js","components/dashboard/Dashboard.js","components/students/list/StudentSearchBar.js","components/students/list/StudentList.js","components/common/LabelBox.js","components/students/details/StudentDetails.js","components/library/issue/BookIssue.js","components/library/return/BookReturn.js","container/App.js","serviceWorker.js","index.js","components/students/details/StudentDetails.module.css","components/students/AdmissionForm.module.css","components/dashboard/Dashboard.module.css","container/App.module.css","components/header/Header.module.css","components/sidenav/Sidenav.module.css"],"names":["module","exports","Header","AppBar","position","Toolbar","Avatar","alt","src","require","Typography","variant","noWrap","className","classes","grow","sectionDesktop","IconButton","aria-label","color","Badge","badgeContent","edge","aria-haspopup","Component","Sidenav","state","menus","title","id","icon","submenus","link","open","handleMenuClick","menuId","console","log","menu","find","m","undefined","setState","linkStyle","textDecoration","width","display","padding","Drawer","drawer","paper","drawerpaper","this","map","List","component","key","ListItem","button","style","length","onClick","to","ListItemIcon","minWidth","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","submenu","Divider","IRMS_SERVICE","axios","create","baseURL","defaults","headers","AddressForm","address","addressType","line1","line2","city","country","pin","onChangeHandle","value","field","addr","props","onChange","Grid","container","direction","justify","spacing","alignItems","item","xs","TextField","label","e","target","type","bloodGropupOptions","text","religionOptions","genderOptions","AdmissionForm","addDocumentRow","student","documents","push","documentType","filename","removeDocumentRow","index","splice","onFormInputChange","event","child","attributes","getAttribute","indexOf","keyArray","split","currObj","forEach","element","handleClosureChange","docindex","onAddressChange","addressList","a","onDOBChange","date","dateStr","dateOfBirth","Moment","format","updateEmergencyContact","emergencyContacts","saveData","async","post","JSON","stringify","then","resp","error","componentDidMount","location","pathname","stdId","match","params","get","response","data","aadharNumber","addmissionDate","addmissionStandard","bloodGroup","community","fileName","emailId","contactNumber","personName","relationWithStudent","enrollmentId","firstName","gender","languageKnown","lastName","leavingDate","middleName","nationality","relatives","relation","religion","Card","CardHeader","textAlign","height","titleTypographyProps","CardContent","noValidate","autoComplete","inputProps","FormControl","InputLabel","Select","labelId","option","MenuItem","formControl","utils","DateFnsUtils","disableFuture","margin","openTo","views","inputValue","CardMedia","image","margintop15px","width25percent","contact","i","doc","paddingTop","fontSize","cursor","float","InputBase","CardActions","Button","FeeReceipt","action","trigger","content","componentRef","ref","el","Date","Dashboard","renderTeachersOnLeaveToday","card","renderTodayFeeCollection","StudentSearchBar","selectedOption","class","section","rollNo","componentDidUpdate","onChangeClass","onChangeSection","onChangeRollNo","onSearchClick","render","StudentList","currentPage","rowsPerPage","students","allStudents","selectedStudent","filter","onChangeSearhBar","editStudent","onFilterInputChange","filteredStudent","std","toLowerCase","handleChangePage","resetFilter","renderTable","Paper","TableContainer","Table","stickyHeader","TableHead","background","TableRow","TableCell","align","TableBody","placeholder","Tooltip","placement","TransitionComponent","Zoom","TablePagination","rowsPerPageOptions","count","page","onChangePage","LabelBox","styles","labelBox","flexDirection","verticalAlign","transform","transformOrigin","fontFamily","fontWeight","lineHeight","letterSpacing","minHeight","studentId","father","rel","mother","resAddr","corAddr","aadharNo","mobile","phoneNumber","email","BookIssue","BookReturn","App","preRequest","request","loader","postResponse","errorInterceptor","selectedSubMenu","handleSubMenuClick","subMenuId","interceptors","use","root","onSubMenuClick","Container","maxWidth","exact","path","StudentDetails","zIndex","LinearProgress","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3f619a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeeReceipt_container__20gx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table-container\":\"StudentList_table-container__2mNbH\"};","module.exports = __webpack_public_path__ + \"static/media/GSS-PNG.4baadfb9.png\";","import React, {Component} from 'react'\nimport {AppBar, Toolbar} from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Avatar from '@material-ui/core/Avatar';\nimport classes from './Header.module.css'\n\nexport default class Header extends Component {\n\n    render() {\n        return (\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <Avatar alt=\"GSS\" src={require(\"../../static/images/GSS-PNG.png\")} />\n                    <Typography variant=\"h6\" noWrap>GURUKUL SHIKSHAN SANSTHAN</Typography>\n                    {/*<Typography variant=\"h8\" noWrap> GOVT. APPROVED ENGLISH MEDIUM SCHOOL (CBSE BOARD)</Typography>*/}\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                        <Badge badgeContent={4} color=\"secondary\">\n                            <MailIcon />\n                        </Badge>\n                        </IconButton>\n                        <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n                        <Badge badgeContent={17} color=\"secondary\">\n                            <NotificationsIcon />\n                        </Badge>\n                        </IconButton>\n                        <IconButton\n                        edge=\"end\"\n                        aria-label=\"account of current user\"\n                        aria-haspopup=\"true\"\n                        //onClick={handleProfileMenuOpen}\n                        color=\"inherit\"\n                        >\n                        <AccountCircle />\n                        </IconButton>\n                    </div>\n                </Toolbar> \n            </AppBar>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DnsIcon from '@material-ui/icons/Dns';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Collapse from '@material-ui/core/Collapse';\nimport AccountBox from '@material-ui/icons/AccountBox';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport { NavLink } from 'react-router-dom';\nimport classes from './Sidenav.module.css'\n\nclass Sidenav extends Component {\n\n    state = {\n        menus: [\n            {\n                title: \"Dashboard\",\n                id: \"dashboard\",\n                icon: <DashboardIcon/>,\n                submenus: [],\n                link: \"/dashboard\",\n            },\n            {\n                title: \"Students\",\n                id: \"admission\",\n                icon: <AccountBox/>,\n                open: true,\n                submenus: [\n                    {\n                        title: \"New Admission\",\n                        id: \"new-admission\",\n                        icon: <PersonAddIcon/>,\n                        link: \"/new-student\",\n                    },\n                    {\n                        title: \"Student List\",\n                        id: \"student-list\",\n                        icon: <DnsIcon/>,\n                        link: \"/student-list\",\n                    }\n                ]\n            },\n            {\n                title: \"Accounts\",\n                id: \"accounts\",\n                icon: <SubjectIcon/>,\n                open: false,\n                submenus: [\n                    {\n                        title: \"Fee Receipt\",\n                        id: \"fee-receipt\",\n                        icon: <ReceiptIcon/>,\n                        link: \"/fee-receipt\",\n                    }\n                ]\n            },\n            {\n                title: \"Library\",\n                id: \"library\",\n                icon: <LibraryBooksIcon/>,\n                open: false,\n                submenus: [\n                    {\n                        title: \"Issue Book\",\n                        id: \"issue-book\",\n                        icon: <ArrowBackIcon/>,\n                        link: \"/library/issue\",\n                    },\n                    {\n                        title: \"Return Book\",\n                        id: \"return-book\",\n                        icon: <ArrowForwardIcon/>,\n                        link: \"/library/return\",\n                    }\n                ]\n            }\n        ]\n    };\n\n    handleMenuClick = (menuId) => {\n        console.log(menuId);\n        let menus = [...this.state.menus];\n        let menu = menus.find(m => {return m.id === menuId});\n        if (menu.open !== undefined) {\n            menu.open = !menu.open;\n        } \n        this.setState({menus: menus});\n    }\n\n    render() {\n\n        let linkStyle = {\n            textDecoration: \"none\",\n            width: \"100%\",\n            display: \"flex\",\n            color: \"#4d4d4d\",\n            padding: \"8px 10px 8px 30px\",\n        };\n        return (<Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n              paper: classes.drawerpaper,\n            }}\n            >\n                {this.state.menus.map(menu => {\n                    return(<List component=\"nav\" key={menu.id} className=\"padding0px\">\n                        <ListItem \n                            button \n                            style={ menu.submenus.length === 0 ? {padding:\"0px\"} : {} }\n                            onClick={() => this.handleMenuClick(menu.id)} >\n                            {menu.submenus.length === 0 && (<NavLink to={menu.link} style={{...linkStyle, padding:\"8px 16px\"}}>\n                                <ListItemIcon style={{minWidth: '30px'}}>{menu.icon}</ListItemIcon>\n                            <ListItemText primary={menu.title} />\n                            </NavLink>)}\n                            {menu.submenus.length > 0 && [<ListItemIcon key=\"1\" style={{minWidth: '30px'}}>{menu.icon}</ListItemIcon>,\n                            <ListItemText key=\"2\" primary={menu.title} />]}\n                            { menu.submenus.length > 0 && ( menu.open ? <ExpandLess /> : <ExpandMore />)}\n                        </ListItem>\n                        <Collapse in={menu.open} timeout=\"auto\" unmountOnExit>\n                            <List component=\"div\" disablePadding>\n                            {menu.submenus.map(submenu => {\n                                return(\n                                    <ListItem button\n                                        style={{padding:\"0px\"}}\n                                        //onClick={() => this.handleSubMenuClick(menu.id, submenu.id)} \n                                        key={submenu.id} >\n                                        <NavLink to={submenu.link} style = {linkStyle}>\n                                        <ListItemIcon style={{minWidth: '30px'}}>{submenu.icon}</ListItemIcon>\n                                        <ListItemText primary={submenu.title}/>\n                                        </NavLink>\n                                    </ListItem>\n                                );\n                            })}\n                            </List>\n                        </Collapse>\n                        <Divider/>\n                    </List>);\n                })}\n            </Drawer>\n        );\n    }\n}\nexport default Sidenav;\n","import axios from 'axios';\n\nexport const IRMS_SERVICE = axios.create({\n  baseURL: \"https://cors-anywhere.herokuapp.com/https://irms-service.herokuapp.com/irms-service\",\n});\n\nIRMS_SERVICE.defaults.headers = {\n  'Content-Type': 'application/json'\n}","import React, {Component} from 'react';\nimport Divider from '@material-ui/core/Divider'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nexport default class AddressForm extends Component {\n\n  state = {\n    address: {\n      addressType:\"\",\n      line1:\"\",\n      line2:\"\",\n      city:\"\",\n      state:\"\",\n      country:\"\",\n      pin:\"\"\n    }\n  };\n\n  onChangeHandle = (value, field) => {\n    let addr = {...this.state.address};\n    addr[field] = value;\n    this.setState({address: addr});\n  }\n\n  componentDidUpdate() {\n    this.props.onChange(this.state.address);\n  }\n\n  render() {\n    const { title } = this.props;\n    return(<div>\n    <Typography className={\"margintop20px \" } style={{color: \"#3f51b5\"}}>{title}</Typography>\n        <Divider style={{width: \"25%\"}}/>\n        <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n          <Grid item xs={6}>\n            <TextField className=\"width100percent\" label=\"Address Line 1\" \n              onChange={e => this.onChangeHandle(e.target.value, \"line1\")}\n                />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField className=\"width100percent\" label=\"Address Line 2\" \n                onChange={e => this.onChangeHandle(e.target.value, \"line2\")}/>\n          </Grid>\n          <Grid item xs={3}>\n            <TextField className=\"width100percent\" label=\"City\" \n                onChange={e => this.onChangeHandle(e.target.value, \"city\")}/>\n          </Grid>\n          <Grid item xs={3}>\n            <TextField className=\"width100percent\" label=\"State/Provience\" \n                onChange={e => this.onChangeHandle(e.target.value, \"state\")}/>\n          </Grid>\n          <Grid item xs={3}>\n            <TextField className=\"width100percent\" label=\"Country\" \n                onChange={e => this.onChangeHandle(e.target.value, \"country\")}/>\n          </Grid>\n          <Grid item xs={3}>\n            <TextField className=\"width100percent\" label=\"Pin Code\" type=\"number\"\n                onChange={e => this.onChangeHandle(e.target.value, \"pin\")}/>\n          </Grid>\n        </Grid>\n    </div>);\n  }\n}","export const bloodGropupOptions = [\n  {id:\"\", text:\"Select\"},\n  {id:\"a+\", text:\"A Positive\"},\n  {id:\"a-\", text:\"A Negative\"},\n  {id:\"b+\", text:\"B Positive\"},\n  {id:\"b-\", text:\"B Negative\"},\n  {id:\"o+\", text:\"O Positive\"},\n  {id:\"o-\", text:\"O Negative\"},\n  {id:\"ab+\", text:\"AB Positive\"},\n  {id:\"ab-\", text:\"AB Negative\"}\n];\n\nexport const religionOptions = [\n  {id:\"\", text:\"Select\"},\n  {id:\"hindu\", text:\"Hindu\"},\n  {id:\"muslim\", text:\"Muslim\"},\n  {id:\"jain\", text:\"Jain\"},\n  {id:\"buddhist\", text:\"Buddhist\"},\n  {id:\"christian\", text:\"Christian\"},\n  {id:\"shikkh\", text:\"Shikkh\"},\n  {id:\"other\", text:\"Other\"}\n];\n\nexport const genderOptions = [\n  {id:\"\", text:\"Select\"},\n  {id:\"male\", text:\"Male\"},\n  {id:\"female\", text:\"Female\"}\n];","import React, { Component } from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider'\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport Moment from 'moment';\n\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport classes from \"./AdmissionForm.module.css\"\nimport { IRMS_SERVICE } from \"../../servers\";\nimport AddressForm from \"../common/AddressForm\";\nimport {bloodGropupOptions, religionOptions, genderOptions } from '../common/OptionConfig'\n\nexport default class AdmissionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      student: {\n        aadharNumber: \"string\",\n        addmissionDate: \"2020-02-06T13:49:00.501Z\",\n        addmissionStandard: \"string\",\n        addressList: [\n          {\n            addressType: \"string\",\n            city: \"string\",\n            country: \"string\",\n            line1: \"string\",\n            line2: \"string\",\n            pin: \"string\",\n            state: \"string\"\n          }\n        ],\n        bloodGroup: \"\",\n        community: \"string\",\n        dateOfBirth: \"2020-02-06T13:49:00.501Z\",\n        documents: [\n          {\n            documentType: \"\",\n            fileName: \"string\"\n          }\n        ],\n        emailId: \"string\",\n        emergencyContacts: [\n          {\n            contactNumber: \"string\",\n            personName: \"string\",\n            relationWithStudent: \"string\"\n          }\n        ],\n        enrollmentId: \"string\",\n        firstName: \"string\",\n        gender: \"\",\n        id: 0,\n        languageKnown: \"string\",\n        lastName: \"string\",\n        leavingDate: \"2020-02-06T13:49:00.501Z\",\n        middleName: \"string\",\n        nationality: \"string\",\n        relatives: [\n          {\n            firstName: \"string\",\n            lastName: \"string\",\n            middleName: \"string\",\n            relation: \"string\"\n          }\n        ],\n        religion: \"\"\n      }\n    }\n  }\n\n  addDocumentRow = () => {\n    let student = {...this.state.student};\n    student.documents.push({documentType:\"\", filename:\"\" });\n    this.setState({student});\n  }\n\n  removeDocumentRow = (index) => {\n    let student = {...this.state.student};\n    if (student.documents.length > 1)\n      student.documents.splice(index, 1);\n    this.setState({student});\n  }\n\n  onFormInputChange = (event, child) => {\n    let student = {...this.state.student};\n    let key = null;\n    if (event.target.attributes) { \n      key = event.target.getAttribute('field');\n    }\n    if (! key) {\n      key = child.props.field;\n    }\n    if(!key) {\n      return;\n    }\n    if (key.indexOf('.') > -1) {\n      let keyArray = key.split('.');\n      let currObj = null;\n      keyArray.forEach((element, index) => {\n        if (index < keyArray.length - 1) {\n          currObj = student[element];\n        } else {\n          currObj[element] = event.target.value;\n        }\n      });\n    } else {\n      student[key] = event.target.value;\n    }\n    this.setState({student});\n  }\n\n  handleClosureChange = (event, child) => {\n    let student = {...this.state.student};\n    student.documents[child.props.docindex].documentType = event.target.value;\n    this.setState({student});\n  }\n\n  onAddressChange = (address) => {\n    let addresses = [...this.state.student.addressList]\n    let addr = addresses.find(a => a.addressType.indexOf(address.addressType) >= 0);\n    console.log(address);\n  }\n\n  onDOBChange = (date, dateStr) => {\n    let student = {...this.state.student};\n    student.dateOfBirth = Moment(date).format('d/MM/YYYY');\n    this.setState({student});\n  }\n\n  updateEmergencyContact = (event) => {\n    let student = {...this.state.student};\n    student.emergencyContacts[event.target.attributes.index.value][event.target.attributes.field.value] = event.target.value;\n    this.setState({student});\n  }\n  \n  saveData = async () => {\n    IRMS_SERVICE.post(\"/students\", JSON.stringify(this.state.student)).then(\n      resp => {\n          console.log(resp)\n      },\n      error => {\n\n      }\n    );\n   }\n\n\n\n  componentDidMount = () => {\n    console.log(this.props);\n    if (this.props.location && this.props.location.pathname.indexOf(\"edit-student\") > -1) {\n      let stdId = this.props.match.params.id;\n      IRMS_SERVICE.get(\"/students/\" + stdId).then(response => {\n        console.log(response);\n        if(response) {\n          response.data.dateOfBirth = Moment(response.data.dateOfBirth).format('d/MM/YYYY');\n          this.setState({student: response.data});\n        }\n      });\n    }\n    //console.log(this.state.student);\n  }\n\n  render() {\n    return (<Card>\n              <CardHeader\n                style={{textAlign:\"center\", height:\"25px\"}}\n                title = \"New Admission\" \n                titleTypographyProps = {{variant: \"h5\"}}\n                />\n              <CardContent>\n                <form noValidate autoComplete=\"off\">\n                  <Typography variant=\"h5\" component=\"h2\" style={{color: \"#3f51b5\"}}>A. Student Information  </Typography>\n                  <Divider />\n                  <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                    <Grid item xs={9}>\n                    <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                      <Grid item xs={4}>\n                        <TextField className=\"width100percent\" label=\"First Name\"\n                          value={ this.state.student.firstName}\n                          onChange= {this.onFormInputChange}\n                          inputProps={{ field: \"firstName\"}}\n                        />\n                      </Grid>\n                      <Grid item xs={4}>\n                        <TextField className=\"width100percent\" label=\"Middle Name\"  \n                          inputProps={{ onChange:this.onFormInputChange, field: \"middleName\"}}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <TextField className=\"width100percent\" label=\"Last Name\"  \n                          inputProps={{ onChange:this.onFormInputChange, field: \"lastName\"}}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <FormControl className={ \"width100percent \" }>\n                          <InputLabel id=\"blood-group-select\">Blood Group</InputLabel>\n                          <Select\n                            labelId=\"blood-group-select\"\n                            field=\"bloodGroup\"\n                            value={this.state.student.bloodGroup}\n                            onChange={this.onFormInputChange}\n                          >\n                            {bloodGropupOptions.map(option => <MenuItem key={option.id} value={option.id} field=\"bloodGroup\">{option.text}</MenuItem>)}\n                          </Select>\n                        </FormControl>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <FormControl className={ \"width100percent \" + classes.formControl}>\n                          <InputLabel id=\"gender-select-label\">Gender</InputLabel>\n                          <Select\n                            labelId=\"gender-select-label\"\n                            id=\"gender-select\"\n                            value={this.state.student.gender}\n                            onChange={this.onFormInputChange}\n                          >\n                            {genderOptions.map(option => <MenuItem key={option.id} value={option.id} field=\"bloodGroup\">{option.text}</MenuItem>)}\n                          </Select>\n                        </FormControl>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                          <KeyboardDatePicker\n                            className=\"width100percent\"\n                            disableFuture\n                            margin=\"normal\"\n                            label=\"Date of Birth\"\n                            format=\"dd/MM/yyyy\"\n                            openTo=\"date\"\n                            views={[\"year\", \"month\", \"date\"]}\n                            inputValue={this.state.student.dateOfBirth }\n                            onChange={this.onDOBChange}\n                          />\n                          </MuiPickersUtilsProvider>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <TextField className=\"width100percent\" label=\"Nationality\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"nationality\"}}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <FormControl className={ \"width100percent \" }>\n                          <InputLabel id=\"religion-select\">Religion</InputLabel>\n                          <Select\n                            labelId=\"religion-select\"\n                            field=\"bloodGroup\"\n                            value={this.state.student.religion}\n                            onChange={this.onFormInputChange}\n                          >\n                            {religionOptions.map(option => <MenuItem key={option.id} value={option.id} field=\"religion\">{option.text}</MenuItem>)}\n                          </Select>\n                        </FormControl>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <TextField className=\"width100percent\" label=\"Community\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"community\"}}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <TextField className=\"width100percent\" label=\"Aadhar No\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"aadharNumber\"}}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <TextField className=\"width100percent\" label=\"Language Known\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"languageKnown\"}}/>\n                      </Grid>\n                    </Grid>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <Card className={classes['profile-pic']}>\n                        <CardContent>\n                          <CardMedia className={classes['profile-pic']} image=\"./placeholder.png\" />\n                        </CardContent>\n                      </Card>\n                    </Grid>\n                  </Grid>\n                  <Typography variant=\"h5\" component=\"h2\" style={{color: \"#3f51b5\"}} className=\"margintop20px\">B. Parents/Guardian Information</Typography>\n                  <Divider />\n                  <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                    <Grid item xs={2}>\n                      <Typography color=\"textSecondary\" className={classes.margintop15px} >Father's Name</Typography>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"First Name\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"father.firstName\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"Middle Name\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"father.middleName\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"Last Name\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"father.lastName\"}}/>\n                    </Grid>\n                    <Grid item xs={2}>\n                      <Typography color=\"textSecondary\" className={classes.margintop15px} >Mother's Name</Typography>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"First Name\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"mother.firstName\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"Middle Name\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"mother.middleName\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"Last Name\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"mother.lastName\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"Mobile Number\" />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"Phone Number\" />\n                    </Grid>\n                    <Grid item xs={5}>\n                      <TextField className=\"width100percent\" label=\"Email Address\" />\n                    </Grid>\n                  </Grid>\n                  <AddressForm\n                    title=\"Residential Address\"\n                    onChange={this.onAddressChange}\n                  />\n                  <AddressForm\n                    title=\"Correspondence Address\"\n                    onChange={this.onAddressChange}\n                  />\n                  \n                  <Typography className={\"margintop20px \" } style={{color: \"#3f51b5\"}}>Emergency Contact</Typography>\n                  <Divider className={classes.width25percent}/>\n                  <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                    {this.state.student.emergencyContacts.map((contact, i) => {\n                      return [<Grid item xs={4} key={\"0\" + i}>\n                        <TextField className=\"width100percent\" inputProps={{ onChange:this.updateEmergencyContact, index:i, field: \"contactNumber\"}} label=\"Contact Number\" />\n                      </Grid>,\n                      <Grid item xs={4} key={\"1\" + i}>\n                        <TextField className=\"width100percent\" inputProps={{ onChange:this.updateEmergencyContact, index:i, field: \"personName\"}}  value={contact.personName} label=\"Name of Contact Person\" />\n                      </Grid>,\n                      <Grid item xs={4} key={\"2\" + i}>\n                        <TextField className=\"width100percent\" inputProps={{ onChange:this.updateEmergencyContact, index:i, field: \"relationWithStudent\"}}  value={contact.relationWithStudent} label=\"Relation with Student\" />\n                      </Grid>];\n                    })}\n                  </Grid>\n                  <Typography variant=\"h5\" component=\"h2\"  className=\"margintop20px\" style={{color: \"#3f51b5\"}}>C. Enclosure  </Typography>\n                  <Divider />\n                  <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                    { this.state.student.documents.map((doc, index) => {\n                        return[<Grid item xs={1} key = {\"doc_ctrl_\" + index} style={{paddingTop: \"14px\"}} >\n                          {index === 0 && <AddCircleIcon style={{ fontSize: 35, cursor: \"pointer\"  }} onClick={this.addDocumentRow}/>}\n                          <RemoveCircleIcon style={{ fontSize: 35, cursor: \"pointer\", float:\"right\" }} onClick={ () => this.removeDocumentRow(index)}/>\n                        </Grid>,\n                        <Grid item xs={7} key = {\"doc_\" + index}>\n                          <FormControl className={ \"width100percent \" + classes.formControl}>\n                            <InputLabel id={\"closure_\" + index}>Document Type</InputLabel>\n                            <Select\n                              labelId={\"closure_\" + index}\n                              value={doc.documentType}\n                              onChange={this.handleClosureChange}\n                            >\n                              <MenuItem docindex = {index} value={''}>Select</MenuItem>\n                              <MenuItem docindex = {index} value={'birthSertificate'}>Birth Certificate</MenuItem>\n                              <MenuItem docindex = {index} value={'transferCertificate'}>Original copy of Transfer Certificate</MenuItem>\n                              <MenuItem docindex = {index} value={'parentsPhoto'}>Passport size photograph of parent.</MenuItem>\n                              <MenuItem docindex = {index} value={'aadhar'}>Photo copy of Aadhar</MenuItem>\n                            </Select>\n                          </FormControl>\n                      </Grid>,\n                      <Grid item xs={4} key = {\"doc_file_\" + index}>\n                        <InputBase type=\"file\" inputProps={{ 'aria-label': 'naked' }}/>\n                      </Grid>];\n                    } )}\n                    \n                  </Grid>\n                </form>\n              </CardContent>\n              <CardActions>\n                <Button variant=\"contained\" onClick={this.saveData} color=\"primary\">Save</Button>\n                <Button variant=\"contained\" color=\"secondary\">Cancel</Button>\n              </CardActions>\n            </Card>);\n  }\n\n}","import React, { Component } from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport PrintIcon from '@material-ui/icons/Print';\nimport Typography from '@material-ui/core/Typography';\nimport ReactToPrint from \"react-to-print\";\nimport classes from \"./FeeReceipt.module.css\"\n\nexport default class FeeReceipt extends Component {\n\n  render() {\n    return (<Card >\n      <CardHeader\n        style={{textAlign:\"center\", height:\"25px\"}}\n        action={\n          <ReactToPrint\n           trigger = { () => <IconButton>\n            <PrintIcon />\n          </IconButton>}\n          content={() => this.componentRef}\n          />\n\n        }\n        title = \"Fee Receipt\" \n        titleTypographyProps = {{variant: \"h5\"}}\n        >\n      </CardHeader>\n      <CardContent>\n        <Card className={classes.container} \n          id=\"toBePrinted\" ref={el => (this.componentRef = el)}>\n          <CardContent>\n            <Typography style={{textAlign:\"center\", fontSize:\"24px\"}}>GURUKUL SHIKSHAN SANSTHAN</Typography>\n            <Typography style={{textAlign:\"center\"}}>(Robertsganj, Mirzapur, UP. ESTD: 2020)</Typography>\n            <Typography>Name</Typography><Typography>Ashish</Typography>\n            <Typography>Class</Typography><Typography>Class 2</Typography>\n            <Typography>Date</Typography><Typography>{new Date() + \"\"}</Typography>\n          </CardContent>\n        </Card>\n      </CardContent>\n    </Card>);\n  }\n\n}","import React, { Component } from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport classes from './Dashboard.module.css'\n\nexport default class Dashboard extends Component {\n\n  render() {\n    return(\n      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n        <Grid item xs={6}>\n          {this.renderTeachersOnLeaveToday()}\n        </Grid>\n        <Grid item xs={6}>\n          {this.renderTodayFeeCollection()}\n        </Grid>\n        <Grid item xs={6}>\n          {this.renderTeachersOnLeaveToday()}\n        </Grid>\n        <Grid item xs={6}>\n          {this.renderTodayFeeCollection()}\n        </Grid>\n        <Grid item xs={6}>\n          {this.renderTeachersOnLeaveToday()}\n        </Grid>\n        <Grid item xs={6}>\n          {this.renderTodayFeeCollection()}\n        </Grid>\n        <Grid item xs={6}>\n          {this.renderTeachersOnLeaveToday()}\n        </Grid>\n        <Grid item xs={6}>\n          {this.renderTodayFeeCollection()}\n        </Grid>\n      </Grid>\n    );\n  }\n\n  renderTeachersOnLeaveToday = () => {\n    return(\n      <Card className={classes.card}>\n        <CardHeader className={classes['card-header']}\n          style={{textAlign:\"center\", height:\"20px\", color: \"#3f51b5\"}}\n          title = \"Teachers on Leave Today\"\n          \n          />\n        <CardContent className={classes['card-content']}>\n\n        </CardContent>\n      </Card>\n    );\n  }\n\n  renderTodayFeeCollection = () => {\n    return(\n      <Card className={classes.card}>\n        <CardHeader className={classes['card-header']}\n          style={{textAlign:\"center\", height:\"20px\", color: \"#3f51b5\"}}\n          title = \"Today's Fee Collection\"\n          />\n        <CardContent className={classes['card-content']}>\n\n        </CardContent>\n      </Card>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport classes from \"../AdmissionForm.module.css\"\n\nexport default class StudentSearchBar extends Component {\n\n  state = {\n    selectedOption: {\n      class:'',\n      section:'',\n      rollNo: ''\n    }\n  }\n\n  componentDidUpdate = () => {\n    this.props.onChange && this.props.onChange(this.state.selectedOption);\n  }\n\n  onChangeClass = (event) => {\n    let selectedOption = {...this.state.selectedOption};\n    selectedOption.class = event.target.value;\n    this.setState({selectedOption})\n  }\n\n  onChangeSection = (event) => {\n    let selectedOption = {...this.state.selectedOption};\n    selectedOption.section = event.target.value;\n    this.setState({selectedOption})\n  }\n\n  onChangeRollNo = (event) => {\n    let selectedOption = {...this.state.selectedOption};\n    selectedOption.rollNo = event.target.value;\n    this.setState({selectedOption})\n  }\n\n  onSearchClick = () => {\n    this.props.onSearchClick && this.props.onSearchClick(this.state.selectedOption);\n  }\n\n  render = () => {\n    return (<Grid item xs={12} >\n      <Grid  container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={2} style= {{margin: \"0px 5px\"}}>\n          <FormControl className={ \"width100percent \" + classes.formControl}>\n            <InputLabel id=\"class-select\">Class</InputLabel>\n            <Select\n              labelId=\"class-select\"\n              value={this.state.selectedOption.class}\n              onChange={this.onChangeClass}\n            >\n              <MenuItem value={''} >Select</MenuItem>\n              <MenuItem value={'1'} >Class 1st</MenuItem>\n              <MenuItem value={'2'} >Class 2nd</MenuItem>\n              <MenuItem value={'3'} >Class 3rd</MenuItem>\n              <MenuItem value={'4'} >Class 4th</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={2} style= {{margin: \"0px 5px\"}}>\n          <FormControl className={ \"width100percent \" + classes.formControl}>\n            <InputLabel id=\"section-select\">Section</InputLabel>\n            <Select\n              labelId=\"section-select\"\n              value={this.state.selectedOption.section}\n              onChange={this.onChangeSection}\n            >\n              <MenuItem value={''} >Select</MenuItem>\n              <MenuItem value={'a'} >Section A</MenuItem>\n              <MenuItem value={'b'} >Section B</MenuItem>\n              <MenuItem value={'c'} >Section C</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={2} style= {{margin: \"0px 5px\"}}>\n          <FormControl className={ \"width100percent \" + classes.formControl}>\n            <InputLabel id=\"roll-no-select\">Roll No</InputLabel>\n            <Select\n              labelId=\"roll-no-select\"\n              value={this.state.selectedOption.rollNo}\n              onChange={this.onChangeRollNo}\n            >\n              <MenuItem value={''} >Select</MenuItem>\n              <MenuItem value={'a+'} >A+ve</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        {this.props.onSearchClick && (<Grid item xs={2} style= {{margin: \"0px 5px\"}}>\n          <Button variant=\"contained\" onClick={this.onSearchClick} color=\"primary\">Search</Button>\n        </Grid>)}\n      </Grid>\n      <Divider className=\"margintop10px\"/>\n    </Grid>);\n  }\n\n}","import React, { Component } from \"react\"\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport Zoom from '@material-ui/core/Zoom';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport StudentSearchBar from './StudentSearchBar'\nimport classes from './StudentList.module.css'\nimport {IRMS_SERVICE} from '../../../servers'\nimport { Link } from 'react-router-dom';\n\nexport default class StudentList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state.students = this.state.allStudents;\n  }\n\n  state = {\n    currentPage: 0,\n    rowsPerPage: 10,\n    students : [],\n    allStudents : [],\n    selectedStudent: null,\n    filter:{enrollmentId:\"\",firstName:\"\",middleName:\"\",lastName:\"\",class:\"\",section:\"\",rollNo:\"\"},\n  };\n\n  onChangeSearhBar = (option) => {\n    console.log(option);\n  }\n\n  editStudent = () => {\n    console.log(\"edit student\");\n  }\n\n  onFilterInputChange = (event) => {\n    let key = event.target.getAttribute('field');\n    let allStudents = [...this.state.allStudents];\n    let filter = {...this.state.filter};\n    filter[key] = event.target.value;\n\n    let filteredStudent = allStudents.filter(std => { \n      return std.enrollmentId.toLowerCase().indexOf(filter.enrollmentId.toLowerCase()) > -1\n            && std.firstName.toLowerCase().indexOf(filter.firstName.toLowerCase()) > -1\n            && std.middleName.toLowerCase().indexOf(filter.middleName.toLowerCase()) > -1 \n            && std.lastName.toLowerCase().indexOf(filter.lastName.toLowerCase()) > -1 \n          /*  && std.class && std.class.toLowerCase().indexOf(filter.class.toLowerCase()) > -1 \n            && std.section && std.section.toLowerCase().indexOf(filter.section.toLowerCase()) > -1 \n            && std.rollNo && std.rollNo.toLowerCase().indexOf(filter.rollNo.toLowerCase()) > -1 */ ; \n    });\n\n    this.setState({students: filteredStudent, filter});\n  }\n\n  handleChangePage = () => {\n    \n  }\n\n  componentDidUpdate = () => {\n\n  }\n\n  componentDidMount = () => {\n    IRMS_SERVICE.get(\"/students\").then(\n      resp => {\n        console.log(resp.data);\n        this.setState({allStudents: resp.data, students: resp.data})\n      }, \n      error => {\n        console.log(error);\n      });\n  }\n\n  resetFilter = () => {\n    this.setState({students:this.state.allStudents, filter:{enrollmentId:\"\",firstName:\"\",middleName:\"\",lastName:\"\",class:\"\",section:\"\",rollNo:\"\"}})\n  }\n\n  render = () => {\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n        <StudentSearchBar\n          //onChange={this.onChangeSearhBar}\n          onSearchClick={this.onChangeSearhBar}\n        />\n        { this.renderTable() }\n      </Grid>\n    );\n  }\n\n  renderTable = () => {\n    return(<Paper className = {classes['.table-container']} style={{width: \"calc(100% - 10px)\", margin: \"0px auto\"}} >\n      <TableContainer style={{height:\"calc( 100% - 200px)\"}}>\n      <Table stickyHeader aria-label=\"customized table\">\n        <TableHead style={{background:\"black\"}}>\n          <TableRow>\n            <TableCell align=\"center\">Enrollment Id</TableCell>\n            <TableCell align=\"center\">First Name</TableCell>\n            <TableCell align=\"center\">Middle Name</TableCell>\n            <TableCell align=\"center\">Last Name</TableCell>\n            <TableCell align=\"center\">Class</TableCell>\n            <TableCell align=\"center\">Section</TableCell>\n            <TableCell align=\"center\">Roll No</TableCell>\n            <TableCell align=\"center\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <TableCell align=\"center\" className=\"padding0px\">\n              <InputBase className=\"width100percent\"\n                value={this.state.filter.enrollmentId}\n                inputProps={{ onChange:this.onFilterInputChange, field: \"enrollmentId\", placeholder:\"enrollment id\", style:{textAlign:\"center\"}}}\n              />\n            </TableCell>\n            <TableCell align=\"center\" className=\"padding0px\">\n              <InputBase className=\"width100percent\" \n                value={this.state.filter.firstName}\n                inputProps={{ onChange:this.onFilterInputChange, field: \"firstName\", placeholder:\"first name\", style:{textAlign:\"center\"}}}\n              />\n            </TableCell>\n            <TableCell align=\"center\" className=\"padding0px\">\n              <InputBase className=\"width100percent\" \n                value={this.state.filter.middleName}\n                inputProps={{ onChange:this.onFilterInputChange, field: \"middleName\", placeholder:\"middle name\", style:{textAlign:\"center\"}}}\n              />\n            </TableCell>\n            <TableCell align=\"center\" className=\"padding0px\">\n              <InputBase className=\"width100percent\" \n                value={this.state.filter.lastName}\n                inputProps={{ onChange:this.onFilterInputChange, field: \"lastName\", placeholder:\"last name\", style:{textAlign:\"center\"}}}\n              />\n            </TableCell>\n            <TableCell align=\"center\" className=\"padding0px\">\n              <InputBase className=\"width100percent\" \n                value={this.state.filter.class}\n                inputProps={{ onChange:this.onFilterInputChange, field: \"class\", placeholder:\"class\", style:{textAlign:\"center\"}}}\n              />\n            </TableCell>\n            <TableCell align=\"center\" className=\"padding0px\">\n              <InputBase className=\"width100percent\" \n                value={this.state.filter.section}\n                inputProps={{ onChange:this.onFilterInputChange, field: \"section\", placeholder:\"section\", style:{textAlign:\"center\"}}}\n              />\n            </TableCell>\n            <TableCell align=\"center\" className=\"padding0px\">\n              <InputBase className=\"width100percent\" \n                value={this.state.filter.rollNo}\n                inputProps={{ onChange:this.onFilterInputChange, field: \"rollNo\", placeholder:\"roll no\", style:{textAlign:\"center\"}}}\n              />\n            </TableCell>\n            <TableCell align=\"center\" className=\"padding0px\">\n              <Tooltip title=\"Reset Filter\"  placement=\"top\" TransitionComponent={Zoom} >\n                <IconButton style={{padding: \"0px\"}} onClick={this.resetFilter}>\n                  <BackspaceIcon/>\n                </IconButton>\n              </Tooltip>\n            </TableCell>\n          </TableRow>\n          { this.state.students ? \n          this.state.students.map(student => (\n            <TableRow key={student.id}>\n              <TableCell align=\"center\">\n                <Link to={\"/student-detail/\" + student.id} style={{textDecoration:\"none\", color:\"#3f51b5\"}}>{student.enrollmentId}</Link>\n              </TableCell>\n              <TableCell align=\"center\">{student.firstName}</TableCell>\n              <TableCell align=\"center\">{student.middleName}</TableCell>\n              <TableCell align=\"center\">{student.lastName}</TableCell>\n              <TableCell align=\"center\">{student.class}</TableCell>\n              <TableCell align=\"center\">{student.section}</TableCell>\n              <TableCell align=\"center\">{student.rollNo}</TableCell>\n              <TableCell align=\"center\" className=\"padding0px\" >\n                \n                <Link to={\"/edit-student/\" + student.id}><IconButton><EditIcon/></IconButton></Link>\n              </TableCell>\n            </TableRow>\n          )) \n          :\n          <TableRow>\n            <TableCell align=\"center\">No Record Found</TableCell>\n          </TableRow> }\n        </TableBody>\n      </Table>\n    </TableContainer>\n    <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={this.state.students.length}\n        rowsPerPage={this.state.rowsPerPage}\n        page={this.state.currentPage}\n        onChangePage={this.handleChangePage}\n        //onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>);\n  }\n\n  \n}","import React,  { Component } from \"react\";\n\nexport default class LabelBox extends Component {\n\n  render = () => {\n  \n    let styles = {\n                labelBox : {\n                  display: \"inline-flex\",\n                  flexDirection: \"column\",\n                  verticalAlign: \"top\",\n                  width: \"100%\"\n                },\n                label: {\n                  transform: \"translate(0, 1.5px) scale(0.85)\",\n                  transformOrigin: \"top left\",\n                  color: \"#3f51b5\",\n                  fontSize: \"1rem\",\n                  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n                  fontWeight: 400,\n                  lineHeight: 1,\n                  letterSpacing: \"0.00938em\"\n                },\n                value: {\n                  minHeight: \"20px\",\n                  padding: \"3px 0px 0px 10px\",\n                  color: \"#565656\"\n                }\n              }\n\n    return (\n      <div style={styles.labelBox}>\n        <label style={styles.label}>{this.props.label}</label>\n        <div style={styles.value}>\n          {this.props.value}\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport LabelBox from '../../common/LabelBox'\nimport { Link } from 'react-router-dom';\nimport classes from \"./StudentDetails.module.css\"\nimport {IRMS_SERVICE} from '../../../servers'\nimport Moment from 'moment';\n\nexport default class AdmissionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      student: { }\n    }\n  }\n\n  componentDidMount = () => {\n    console.log(this.props)\n    let studentId = this.props.match.params.id;\n    IRMS_SERVICE.get(\"/students/\" + studentId).then(response => {\n      console.log(response);\n      if(response) {\n        this.setState({student: response.data});\n      }\n      \n    });\n  }\n\n  render() {\n    let father = this.state.student.relatives ? this.state.student.relatives.find(rel => { return rel.relation === 'father'; } ) : null;\n    let mother = this.state.student.relatives ? this.state.student.relatives.find(rel => { return rel.relation === 'mother'; } ) : null;\n\n    let resAddr = this.state.student.addressList ? this.state.student.addressList.find(addr => { return addr.addressType === 'resAddress'; } ) : null;\n    let corAddr = this.state.student.addressList ? this.state.student.addressList.find(addr => { return addr.addressType === 'corAddress'; } ) : null;\n\n    return (<Card>\n              <CardHeader\n                style={{textAlign:\"center\", height:\"25px\", color: \"#3f51b5\"}}\n                title = {this.state.student.firstName + \" \" + this.state.student.middleName + \" \" + this.state.student.lastName}\n                titleTypographyProps = {{variant: \"h5\"}}\n                action={\n                <Link to={\"/edit-student/\" + this.state.student.id}>\n                  <Button variant=\"contained\" color=\"primary\">\n                    <EditIcon />\n                    Edit\n                  </Button>\n                </Link>\n                }\n                />\n              <CardContent>\n                <form noValidate autoComplete=\"off\">\n                  <Typography variant=\"h5\" component=\"h2\" style={{color: \"#3f51b5\"}}>A. Student Information  </Typography>\n                  <Divider className={classes[\"margin-bottom10px\"]}/>\n                  <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                    <Grid item xs={9}>\n                    <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                      <Grid item xs={4}>\n                        <LabelBox label=\"First Name\" value={this.state.student.firstName}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <LabelBox label=\"Middle Name\" value={this.state.student.middleName}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <LabelBox label=\"Last Name\" value={this.state.student.lastName}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <LabelBox label=\"Blood Group\" value={this.state.student.bloodGroup + \"ve\"}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <LabelBox label=\"Gender\" value={this.state.student.gender}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <LabelBox label=\"Date of Birth\" \n                                  value={this.state.student.dateOfBirth ? Moment(this.state.student.dateOfBirth).format('d-MMM-YYYY') : \"\"}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <LabelBox label=\"Nationality\" value={this.state.student.nationality}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <LabelBox label=\"Religion\" value={this.state.student.religion}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <LabelBox label=\"Community\" value={this.state.student.community}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <LabelBox label=\"Aadhar Number\" value={this.state.student.aadharNo}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <LabelBox label=\"Language Known\" value={this.state.student.languageKnown}/>\n                      </Grid>\n                    </Grid>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <Card className={classes['profile-pic']}>\n                        <CardContent>\n                          <CardMedia className={classes['profile-pic']} image=\"./placeholder.png\" />\n                        </CardContent>\n                      </Card>\n                    </Grid>\n                  </Grid>\n                  <Typography variant=\"h5\" component=\"h2\"  className=\"margintop20px\" style={{color: \"#3f51b5\"}}>B. Parents/Guardian Information</Typography>\n                  <Divider  className={classes[\"margin-bottom10px\"]}/>\n                  <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                    <Grid item xs={2}>\n                      <Typography color=\"textSecondary\" className={classes.margintop15px} >Father's Name</Typography>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <LabelBox label=\"First Name\" value={father ? father.firstName : \"\"}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <LabelBox label=\"Middle Name\" value={father ? father.middleName : \"\"}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <LabelBox label=\"Last Name\" value={father ? father.lastName : \"\"}/>\n                    </Grid>\n                    <Grid item xs={2}>\n                      <Typography color=\"textSecondary\" className={classes.margintop15px} >Mother's Name</Typography>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <LabelBox label=\"First Name\" value={mother ? mother.firstName : \"\"}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <LabelBox label=\"Middle Name\" value={mother ? mother.middleName : \"\"}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <LabelBox label=\"Last Name\" value={mother ? mother.lastName : \"\"}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <LabelBox label=\"Mobile Number\" value={this.state.student.mobile}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <LabelBox label=\"Phone Number\" value={this.state.student.phoneNumber}/>\n                    </Grid>\n                    <Grid item xs={5}>\n                      <LabelBox label=\"Email\" value={this.state.student.email}/>\n                    </Grid>\n                  </Grid>\n                  <Typography className={\"margintop20px \" } style={{color: \"#3f51b5\"}}>Residential Address</Typography>\n                  <Divider className={classes[\"margin-bottom10px\"] + ' ' + classes.width25percent}/>\n                  <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                    <Grid item xs={6}>\n                      <LabelBox label=\"Line 1\" value={ resAddr ? resAddr.line1 : \"\" }/>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <LabelBox label=\"Line 2\" value={ resAddr ? resAddr.line2 : \"\" }/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <LabelBox label=\"City\" value={ resAddr ? resAddr.city : \"\" }/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <LabelBox label=\"State/Provience\" value={ resAddr ? resAddr.state : \"\" }/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <LabelBox label=\"Country\" value={ resAddr ? resAddr.country : \"\" }/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <LabelBox label=\"Pin Code\" value={ resAddr ? resAddr.pin : \"\" }/>\n                    </Grid>\n                  </Grid>\n                  <Typography className={\"margintop20px \" } style={{color: \"#3f51b5\"}}>Correspondence Address</Typography>\n                  <Divider  className={classes[\"margin-bottom10px\"] + ' ' + classes.width25percent}/>\n                  <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                  <Grid item xs={6}>\n                      <LabelBox label=\"Line 1\" value={ corAddr ? corAddr.line1 : \"\" }/>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <LabelBox label=\"Line 2\" value={ corAddr ? corAddr.line2 : \"\" }/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <LabelBox label=\"City\" value={ corAddr ? corAddr.city : \"\" }/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <LabelBox label=\"State/Provience\" value={ corAddr ? corAddr.state : \"\" }/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <LabelBox label=\"Country\" value={ corAddr ? corAddr.country : \"\" }/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <LabelBox label=\"Pin Code\" value={ corAddr ? corAddr.pin : \"\" }/>\n                    </Grid>\n                  </Grid>\n                  <Typography className={\"margintop20px \" } style={{color: \"#3f51b5\"}}>Emergency Contact</Typography>\n                  <Divider  className={classes[\"margin-bottom10px\"] + ' ' + classes.width25percent}/>\n                  <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                    { this.state.student.emergencyContacts && this.state.student.emergencyContacts.map((contact, i) => {\n                      return [<Grid item xs={4} key={\"0\" + i}>\n                        <LabelBox label=\"Contact Number\" value={ contact.contactNumber }/>\n                      </Grid>,\n                      <Grid item xs={4} key={\"1\" + i}>\n                        <LabelBox label=\"Name of Contact Person\" value={ contact.personName }/>\n                      </Grid>,\n                      <Grid item xs={4} key={\"2\" + i}>\n                        <LabelBox label=\"Relation with Student\" value={ contact.relationWithStudent }/>\n                      </Grid>];\n                    })}\n                  </Grid>\n                  <Typography variant=\"h5\" component=\"h2\"  className=\"margintop20px\" style={{color: \"#3f51b5\"}}>C. Enclosure  </Typography>\n                  <Divider  className={classes[\"margin-bottom10px\"]}/>\n                  <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                    { this.state.student.documents && this.state.student.documents.map((doc, index) => {\n                        return[<Grid item xs={1} key = {\"doc_ctrl_\" + index} style={{paddingTop: \"14px\"}} ></Grid>,\n                        <Grid item xs={7} key = {\"doc_\" + index}>\n                          <LabelBox label=\"Document Type\" value={ doc.documentType }/>\n                      </Grid>,\n                      <Grid item xs={4} key = {\"doc_file_\" + index}>\n                        <IconButton>\n                          <InsertDriveFileIcon/>\n                        </IconButton>\n                      </Grid>];\n                    } )}\n                  </Grid>\n                </form>\n              </CardContent>\n            </Card>);\n  }\n\n}","import React, {Component} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nexport default class BookIssue extends Component {\n\n  render = () => {\n    return(\n      <Card>\n        <CardHeader title=\"Book Issue\"/>\n        <CardContent>\n\n        </CardContent>\n      </Card>\n    );\n  }\n}","import React, {Component} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nexport default class BookReturn extends Component {\n\n  render = () => {\n    return(\n      <Card>\n        <CardHeader title=\"Book Return\"/>\n        <CardContent>\n\n        </CardContent>\n      </Card>\n    );\n  }\n}","import React, {Component} from 'react';\nimport Container from '@material-ui/core/Container';\nimport classes from './App.module.css';\nimport Header from '../components/header/Header';\nimport Sidenav from '../components/sidenav/Sidenav';\nimport AdmissionForm from '../components/students/AdmissionForm'\nimport FeeReceipt from '../components/feereceipt/FeeReceipt';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Dashboard from '../components/dashboard/Dashboard'\nimport StudentList from '../components/students/list/StudentList'\nimport StudentDetails from \"../components/students/details/StudentDetails\"\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport BookIssue from '../components/library/issue/BookIssue';\nimport BookReturn from '../components/library/return/BookReturn';\nimport {IRMS_SERVICE} from '../servers'\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    IRMS_SERVICE.interceptors.request.use(request => this.preRequest(request));\n    IRMS_SERVICE.interceptors.response.use(response => this.postResponse(response), error => this.errorInterceptor(error) );\n  }\n\n  preRequest = (request) => {\n    this.setState({loader:\"block\"});\n    return request;\n  }\n\n  postResponse = (response) => {\n    this.setState({loader:\"none\"});\n    return response;\n  }\n\n  errorInterceptor = (response) => {\n    this.setState({loader:\"none\"});\n    return response;\n  }\n  \n  state = {\n    loader: \"none\",\n    selectedSubMenu: \"student-detail\",\n  };\n\n  handleSubMenuClick = (subMenuId) => {\n    this.setState({selectedSubMenu: subMenuId});\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className={classes.root}>\n          <Header/>\n          <Sidenav onSubMenuClick={this.handleSubMenuClick}/>\n          <Container className={classes['main-container']} maxWidth={false}>\n            <Switch>\n              <Route exact path=\"/dashboard\"  component={Dashboard}/>\n              <Route exact path=\"/new-student\" component={AdmissionForm}/>\n              <Route exact path=\"/edit-student/:id\" component={AdmissionForm}/>\n              <Route exact path=\"/fee-receipt\" component={FeeReceipt}/>\n              <Route exact path=\"/student-list\" component={StudentList}/>\n              <Route exact path=\"/student-detail\" component={StudentDetails}/>\n              <Route exact path=\"/student-detail/:id\" component={StudentDetails}/>\n              <Route exact path=\"/library/issue\" component={BookIssue}/>\n              <Route exact path=\"/library/return\" component={BookReturn}/>\n              \n            </Switch>\n          </Container>\n        </div>\n        \n        <div style={{display: this.state.loader, minHeight: \"800px\", background: \"#33333340\", position: \"relative\", zIndex: 9999}}><LinearProgress style={{zIndex: \"9999\"}}/></div>\n      </BrowserRouter>\n      );\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"StudentDetails_card__3b--G\",\"profile-pic\":\"StudentDetails_profile-pic__15FQK\",\"margintop15px\":\"StudentDetails_margintop15px__2lNsR\",\"width25percent\":\"StudentDetails_width25percent__2mu33\",\"margin-bottom10px\":\"StudentDetails_margin-bottom10px__3DVkW\",\"labelvalue\":\"StudentDetails_labelvalue__1sKWk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"AdmissionForm_card__1S5xc\",\"profile-pic\":\"AdmissionForm_profile-pic__2I6qX\",\"margintop15px\":\"AdmissionForm_margintop15px__1MAQK\",\"width25percent\":\"AdmissionForm_width25percent__3K1vW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Dashboard_card__30DmG\",\"card-header\":\"Dashboard_card-header__2DpVp\",\"card-content\":\"Dashboard_card-content__18cau\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3F5ee\",\"root\":\"App_root__28TbV\",\"main-container\":\"App_main-container__1fJav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grow\":\"Header_grow__1xb39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawer\":\"Sidenav_drawer__2Eiob\",\"drawerpaper\":\"Sidenav_drawerpaper__2F9sN\"};"],"sourceRoot":""}