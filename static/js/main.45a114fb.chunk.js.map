{"version":3,"sources":["static/images/GSS-PNG.png","components/header/Header.js","components/sidenav/Sidenav.js","components/admissionform/AdmissionForm.js","components/feereceipt/FeeReceipt.js","components/dashboard/Dashboard.js","container/App.js","serviceWorker.js","index.js","components/admissionform/AdmissionForm.module.css","container/App.module.css","components/header/Header.module.css","components/sidenav/Sidenav.module.css"],"names":["module","exports","Header","AppBar","position","Toolbar","Avatar","alt","src","require","Typography","variant","noWrap","className","classes","grow","sectionDesktop","IconButton","aria-label","color","Badge","badgeContent","edge","aria-haspopup","Component","Sidenav","state","menus","title","id","icon","submenus","selected","open","handleMenuClick","menuId","console","log","menu","find","m","undefined","resetSelectedMenus","props","onSubMenuClick","setState","handleSubMenuClick","submenuId","forEach","submenu","Drawer","drawer","paper","drawerpaper","this","map","List","component","key","ListItem","button","onClick","ListItemIcon","ListItemText","primary","length","Collapse","in","timeout","unmountOnExit","disablePadding","Divider","AdmissionForm","addDocumentRow","student","documents","push","documentType","filename","removeDocumentRow","index","splice","onFormInputChange","event","child","target","attributes","getAttribute","field","indexOf","keyArray","split","currObj","element","value","handleClosureChange","docindex","onDOBChange","date","dateStr","dateOfBirth","updateEmergencyContact","emergencyContacts","componentDidUpdate","bloodGroup","gender","father","mother","resAddress","corAddress","contactNumber","personName","relationWithStudent","Card","CardContent","noValidate","autoComplete","Grid","container","direction","justify","spacing","alignItems","item","xs","TextField","label","inputProps","onChange","FormControl","formControl","InputLabel","Select","labelId","MenuItem","utils","DateFnsUtils","disableToolbar","disableFuture","margin","format","inputValue","CardMedia","image","margintop15px","width25percent","contact","i","doc","style","paddingTop","fontSize","cursor","float","InputBase","type","CardActions","Button","FeeReceipt","Dashboard","App","selectedSubMenu","subMenuId","root","Container","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45a114fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GSS-PNG.4baadfb9.png\";","import React, {Component} from 'react'\nimport {AppBar, Toolbar} from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Avatar from '@material-ui/core/Avatar';\nimport classes from './Header.module.css'\n\nexport default class Header extends Component {\n\n    render() {\n        return (\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <Avatar alt=\"GSS\" src={require(\"../../static/images/GSS-PNG.png\")} />\n                    <Typography variant=\"h6\" noWrap>GURUKUL SHIKSHAN SANSTHAN</Typography>\n                    {/*<Typography variant=\"h8\" noWrap> GOVT. APPROVED ENGLISH MEDIUM SCHOOL (CBSE BOARD)</Typography>*/}\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                        <Badge badgeContent={4} color=\"secondary\">\n                            <MailIcon />\n                        </Badge>\n                        </IconButton>\n                        <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n                        <Badge badgeContent={17} color=\"secondary\">\n                            <NotificationsIcon />\n                        </Badge>\n                        </IconButton>\n                        <IconButton\n                        edge=\"end\"\n                        aria-label=\"account of current user\"\n                        aria-haspopup=\"true\"\n                        //onClick={handleProfileMenuOpen}\n                        color=\"inherit\"\n                        >\n                        <AccountCircle />\n                        </IconButton>\n                    </div>\n                </Toolbar> \n            </AppBar>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Collapse from '@material-ui/core/Collapse';\nimport AccountBox from '@material-ui/icons/AccountBox';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport classes from './Sidenav.module.css'\n\nclass Sidenav extends Component {\n\n    state = {\n        menus: [\n            {\n                title: \"Dashboard\",\n                id: \"dashboard\",\n                icon: <DashboardIcon/>,\n                submenus: [],\n                selected: false,\n            },\n            {\n                title: \"Addmission\",\n                id: \"admission\",\n                icon: <AccountBox/>,\n                open: false,\n                submenus: [\n                    {\n                        title: \"New Admission\",\n                        id: \"new-admission\",\n                        icon: <PersonAddIcon/>,\n                        selected: true,\n                    }\n                ]\n            },\n            {\n                title: \"Accounts\",\n                id: \"accounts\",\n                icon: <SubjectIcon/>,\n                open: false,\n                submenus: [\n                    {\n                        title: \"Fee Receipt\",\n                        id: \"fee-receipt\",\n                        icon: <ReceiptIcon/>,\n                        selected: false,\n                    }\n                ]\n            },\n            {\n                title: \"Library\",\n                id: \"library\",\n                icon: <LibraryBooksIcon/>,\n                open: false,\n                submenus: [\n                    {\n                        title: \"Issue Book\",\n                        id: \"issue-book\",\n                        icon: <ArrowBackIcon/>,\n                        selected: false,\n                    },\n                    {\n                        title: \"Return Book\",\n                        id: \"return-book\",\n                        icon: <ArrowForwardIcon/>,\n                        selected: false,\n                    }\n                ]\n            }\n        ]\n    };\n\n    handleMenuClick = (menuId) => {\n        console.log(menuId);\n        let menus = [...this.state.menus];\n        let menu = menus.find(m => {return m.id === menuId});\n        if (menu.selected !== undefined) {\n            this.resetSelectedMenus(menus);\n            menu.selected = true;\n            this.props.onSubMenuClick(menuId);\n        }\n        if (menu.open !== undefined) {\n            menu.open = !menu.open;\n        }\n        \n        this.setState({menus: menus});\n    }\n\n    handleSubMenuClick = (menuId, submenuId) => {\n        let menus = [...this.state.menus];\n        this.resetSelectedMenus(menus);\n        let menu = menus.find(m => {return m.id === menuId});\n        let submenu = menu.submenus.find(m => {return m.id === submenuId});\n        submenu.selected = true;\n        this.setState({menus: menus});\n        this.props.onSubMenuClick(submenuId);\n    }\n\n    resetSelectedMenus = (menus) =>{\n        menus.forEach(menu => {\n            if(menu.selected) {menu.selected = false;}\n            menu.submenus.forEach(submenu => { if(submenu.selected){submenu.selected = false;}});\n        });\n    }\n\n\n\n    render() {\n        return (<Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n              paper: classes.drawerpaper,\n            }}\n            >\n                {this.state.menus.map(menu => {\n                    return(<List component=\"nav\" key={menu.id}className=\"padding0px\">\n                        <ListItem \n                            button \n                            selected={menu.selected}\n                            onClick={() => this.handleMenuClick(menu.id)} >\n                            <ListItemIcon>{menu.icon}</ListItemIcon>\n                            <ListItemText primary={menu.title} />\n                            { menu.submenus.length > 0 && ( menu.open ? <ExpandLess /> : <ExpandMore />)}\n                        </ListItem>\n                        <Collapse in={menu.open} timeout=\"auto\" unmountOnExit>\n                            <List component=\"div\" disablePadding>\n                            {menu.submenus.map(submenu => {\n                                return(\n                                    <ListItem button\n                                        selected={submenu.selected} \n                                        onClick={() => this.handleSubMenuClick(menu.id, submenu.id)}  className=\"paddingleft30px\" key={submenu.id}>\n                                        <ListItemIcon>{submenu.icon}</ListItemIcon>\n                                        <ListItemText primary={submenu.title} />\n                                    </ListItem>\n                                );\n                            })}\n                            </List>\n                        </Collapse>\n                        <Divider/>\n                    </List>);\n                })}\n\n                \n            </Drawer>\n        );\n    }\n}\n\nexport default Sidenav;","import React, { Component } from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider'\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\n\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport classes from \"./AdmissionForm.module.css\"\n\nexport default class AdmissionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      student: {\n        bloodGroup: \"\",\n        gender:\"\",\n        father: {},\n        mother: {},\n        resAddress: {},\n        corAddress:{},\n        documents:[{\n          documentType:\"\",\n          filename:\"\"\n        }],\n        emergencyContacts:[{\n            contactNumber:\"\",\n            personName:\"\",\n            relationWithStudent:\"\"\n          },\n          {\n            contactNumber:\"\",\n            personName:\"\",\n            relationWithStudent:\"\"\n          }\n        ]\n      }\n    }\n  }\n\n  addDocumentRow = () => {\n    let student = {...this.state.student};\n    student.documents.push({documentType:\"\", filename:\"\" });\n    this.setState({student});\n  }\n\n  removeDocumentRow = (index) => {\n    let student = {...this.state.student};\n    if (student.documents.length > 1)\n      student.documents.splice(index, 1);\n    this.setState({student});\n  }\n\n  onFormInputChange = (event, child) => {\n    let student = {...this.state.student};\n    let key = null;\n    if (event.target.attributes) { \n      key = event.target.getAttribute('field');\n    }\n    if (! key) {\n      key = child.props.field;\n    }\n    if(!key) {\n      return;\n    }\n    if (key.indexOf('.') > -1) {\n      let keyArray = key.split('.');\n      let currObj = null;\n      keyArray.forEach((element, index) => {\n        if (index < keyArray.length - 1) {\n          currObj = student[element];\n        } else {\n          currObj[element] = event.target.value;\n        }\n      });\n    } else {\n      student[key] = event.target.value;\n    }\n    this.setState({student});\n  }\n\n  handleClosureChange = (event, child) => {\n    let student = {...this.state.student};\n    student.documents[child.props.docindex].documentType = event.target.value;\n    this.setState({student});\n  }\n\n  onDOBChange = (date, dateStr) => {\n    let student = {...this.state.student};\n    student.dateOfBirth = dateStr;\n    this.setState({student});\n  }\n\n  updateEmergencyContact = (event) => {\n    let student = {...this.state.student};\n    student.emergencyContacts[event.target.attributes.index.value][event.target.attributes.field.value] = event.target.value;\n    this.setState({student});\n  }\n\n  componentDidUpdate = () => {\n    console.log(this.state.student);\n  }\n\n  render() {\n    return (<Card>\n              <CardContent>\n                <Typography variant=\"h5\" component=\"h2\"> New Admission  </Typography>\n                <Typography color=\"textSecondary\">Enter details for the new admission </Typography>\n                <form noValidate autoComplete=\"off\">\n                  <Typography variant=\"h5\" component=\"h2\">A. Student Information  </Typography>\n                  <Divider />\n                  <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                    <Grid item xs={9}>\n                    <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                      <Grid item xs={4}>\n                        <TextField className=\"width100percent\" label=\"First Name\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"firstName\"}}\n                        />\n                      </Grid>\n                      <Grid item xs={4}>\n                        <TextField className=\"width100percent\" label=\"Middle Name\"  \n                          inputProps={{ onChange:this.onFormInputChange, field: \"middleName\"}}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <TextField className=\"width100percent\" label=\"Last Name\"  \n                          inputProps={{ onChange:this.onFormInputChange, field: \"lastName\"}}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <FormControl className={ \"width100percent \" + classes.formControl}>\n                          <InputLabel id=\"blood-group-select\">Blood Group</InputLabel>\n                          <Select\n                            labelId=\"blood-group-select\"\n                            field=\"bloodGroup\"\n                            value={this.state.student.bloodGroup}\n                            onChange={this.onFormInputChange}\n                          >\n                            <MenuItem value={''} field=\"bloodGroup\">Select</MenuItem>\n                            <MenuItem value={'a+'} field=\"bloodGroup\">A+ve</MenuItem>\n                            <MenuItem value={'a-'} field=\"bloodGroup\">A-ve</MenuItem>\n                            <MenuItem value={'b+'} field=\"bloodGroup\">B+ve</MenuItem>\n                            <MenuItem value={'b-'} field=\"bloodGroup\">B-ve</MenuItem>\n                            <MenuItem value={'o+'} field=\"bloodGroup\">O+ve</MenuItem>\n                            <MenuItem value={'o-'} field=\"bloodGroup\">O-ve</MenuItem>\n                            <MenuItem value={'ab+'} field=\"bloodGroup\">AB+ve</MenuItem>\n                            <MenuItem value={'ab-'} field=\"bloodGroup\">AB-ve</MenuItem>\n                          </Select>\n                        </FormControl>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <FormControl className={ \"width100percent \" + classes.formControl}>\n                          <InputLabel id=\"demo-simple-select-label\">Gender</InputLabel>\n                          <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={this.state.student.gender}\n                            onChange={this.onFormInputChange}\n                          >\n                            <MenuItem value={''} field=\"gender\">Select</MenuItem>\n                            <MenuItem value={'male'} field=\"gender\">Male</MenuItem>\n                            <MenuItem value={'female'} field=\"gender\">Female</MenuItem>\n                          </Select>\n                        </FormControl>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                          <KeyboardDatePicker\n                            className=\"width100percent\"\n                            disableToolbar\n                            disableFuture\n                            margin=\"normal\"\n                            label=\"Date of Birth\"\n                            format=\"dd/MM/yyyy\"\n                            inputValue={'15/01/2010'}\n                            onChange={this.onDOBChange}\n                          />\n                          </MuiPickersUtilsProvider>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <TextField className=\"width100percent\" label=\"Nationality\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"nationality\"}}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <TextField className=\"width100percent\" label=\"Relegion\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"relegion\"}}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <TextField className=\"width100percent\" label=\"Community\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"community\"}}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <TextField className=\"width100percent\" label=\"Aadhar No\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"aadharNo\"}}/>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <TextField className=\"width100percent\" label=\"Language Known\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"languageKnown\"}}/>\n                      </Grid>\n                    </Grid>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <Card className={classes['profile-pic']}>\n                        <CardContent>\n                          <CardMedia className={classes['profile-pic']} image=\"./placeholder.png\" />\n                        </CardContent>\n                      </Card>\n                    </Grid>\n                  </Grid>\n                  <Typography variant=\"h5\" component=\"h2\"  className=\"margintop20px\">B. Parents/Guardian Information</Typography>\n                  <Divider />\n                  <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                    <Grid item xs={2}>\n                      <Typography color=\"textSecondary\" className={classes.margintop15px} >Father's Name</Typography>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"First Name\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"father.firstName\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"Middle Name\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"father.middleName\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"Last Name\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"father.lastName\"}}/>\n                    </Grid>\n                    <Grid item xs={2}>\n                      <Typography color=\"textSecondary\" className={classes.margintop15px} >Mother's Name</Typography>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"First Name\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"mother.firstName\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"Middle Name\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"mother.middleName\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"Last Name\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"mother.lastName\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"Mobile Number\" />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"Phone Number\" />\n                    </Grid>\n                    <Grid item xs={5}>\n                      <TextField className=\"width100percent\" label=\"Email Address\" />\n                    </Grid>\n                  </Grid>\n                  <Typography className={\"margintop20px \" }>Residential Address</Typography>\n                  <Divider className={classes.width25percent}/>\n                  <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                    <Grid item xs={6}>\n                      <TextField className=\"width100percent\" label=\"Address Line 1\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"resAddress.line1\"}}/>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <TextField className=\"width100percent\" label=\"Address Line 2\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"resAddress.line2\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"City\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"resAddress.city\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"State/Provience\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"resAddress.state\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"Country\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"resAddress.country\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"Pin Code\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"resAddress.pin\"}}/>\n                    </Grid>\n                  </Grid>\n                  <Typography className={\"margintop20px \" }>Correspondence Address</Typography>\n                  <Divider className={classes.width25percent}/>\n                  <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                    <Grid item xs={6}>\n                      <TextField className=\"width100percent\" label=\"Address Line 1\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"corAddress.line1\"}}/>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <TextField className=\"width100percent\" label=\"Address Line 2\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"corAddress.line2\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"City\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"corAddress.city\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"State/Provience\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"corAddress.state\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"Country\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"corAddress.country\"}}/>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField className=\"width100percent\" label=\"Pin Code\" \n                          inputProps={{ onChange:this.onFormInputChange, field: \"corAddress.pin\"}}/>\n                    </Grid>\n                  </Grid>\n                  <Typography className={\"margintop20px \" }>Emergency Contact</Typography>\n                  <Divider className={classes.width25percent}/>\n                  <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                    {this.state.student.emergencyContacts.map((contact, i) => {\n                      return [<Grid item xs={4}>\n                        <TextField className=\"width100percent\" inputProps={{ onChange:this.updateEmergencyContact, index:i, field: \"contactNumber\"}} label=\"Contact Number\" />\n                      </Grid>,\n                      <Grid item xs={4}>\n                        <TextField className=\"width100percent\" inputProps={{ onChange:this.updateEmergencyContact, index:i, field: \"personName\"}}  value={contact.personName} label=\"Name of Contact Person\" />\n                      </Grid>,\n                      <Grid item xs={4}>\n                        <TextField className=\"width100percent\" inputProps={{ onChange:this.updateEmergencyContact, index:i, field: \"relationWithStudent\"}}  value={contact.relationWithStudent} label=\"Relation with Student\" />\n                      </Grid>];\n                    })}\n                  </Grid>\n                  <Typography variant=\"h5\" component=\"h2\"  className=\"margintop20px\">C. Enclosure  </Typography>\n                  <Divider />\n                  <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} alignItems=\"center\">\n                    { this.state.student.documents.map((doc, index) => {\n                        return[<Grid item xs={1} key = {\"doc_ctrl_\" + index} style={{paddingTop: \"14px\"}} >\n                          {index === 0 && <AddCircleIcon style={{ fontSize: 35, cursor: \"pointer\"  }} onClick={this.addDocumentRow}/>}\n                          <RemoveCircleIcon style={{ fontSize: 35, cursor: \"pointer\", float:\"right\" }} onClick={ () => this.removeDocumentRow(index)}/>\n                        </Grid>,\n                        <Grid item xs={7} key = {\"doc_\" + index}>\n                          <FormControl className={ \"width100percent \" + classes.formControl}>\n                            <InputLabel id={\"closure_\" + index}>Document Type</InputLabel>\n                            <Select\n                              labelId={\"closure_\" + index}\n                              value={doc.documentType}\n                              onChange={this.handleClosureChange}\n                            >\n                              <MenuItem docindex = {index} value={''}>Select</MenuItem>\n                              <MenuItem docindex = {index} value={'birthSertificate'}>Birth Certificate</MenuItem>\n                              <MenuItem docindex = {index} value={'transferCertificate'}>Original copy of Transfer Certificate</MenuItem>\n                              <MenuItem docindex = {index} value={'parentsPhoto'}>Passport size photograph of parent.</MenuItem>\n                              <MenuItem docindex = {index} value={'aadhar'}>Photo copy of Aadhar</MenuItem>\n                            </Select>\n                          </FormControl>\n                      </Grid>,\n                      <Grid item xs={4} key = {\"doc_file_\" + index}>\n                        <InputBase type=\"file\" inputProps={{ 'aria-label': 'naked' }}/>\n                      </Grid>];\n                    } )}\n                    \n                  </Grid>\n                </form>\n              </CardContent>\n              <CardActions>\n                <Button variant=\"contained\" color=\"primary\">Save</Button>\n                <Button variant=\"contained\" color=\"secondary\">Cancel</Button>\n              </CardActions>\n            </Card>);\n  }\n\n}","import React, { Component } from \"react\";\n//import classes from \"./FeeReceipt.module.css\"\n\nexport default class FeeReceipt extends Component {\n\n  render() {\n    return (<div>Fee Receipt</div>);\n  }\n\n}","import React, { Component } from \"react\";\n\nexport default class Dashboard extends Component {\n\n  render() {\n    return(<div>Dashboard</div>);\n  }\n}","import React, {Component} from 'react';\nimport Container from '@material-ui/core/Container';\nimport classes from './App.module.css';\nimport Header from '../components/header/Header';\nimport Sidenav from '../components/sidenav/Sidenav';\nimport AdmissionForm from '../components/admissionform/AdmissionForm'\nimport FeeReceipt from '../components/feereceipt/FeeReceipt';\nimport Dashboard from '../components/dashboard/Dashboard'\n\nexport default class App extends Component {\n  \n  state = {\n\n    selectedSubMenu: \"new-admission\",\n  };\n\n  handleSubMenuClick = (subMenuId) => {\n    console.log(subMenuId);\n    this.setState({selectedSubMenu: subMenuId});\n  }\n\n  render() {\n    return (\n        <div className={classes.root}>\n          <Header/>\n          <Sidenav onSubMenuClick={this.handleSubMenuClick}/>\n          <Container className={classes['main-container']} maxWidth={false}>\n            { this.state.selectedSubMenu === \"new-admission\" && <AdmissionForm/> }\n            { this.state.selectedSubMenu === \"fee-receipt\" && <FeeReceipt/> }\n            { this.state.selectedSubMenu === \"dashboard\" && <Dashboard/> }\n          </Container>\n        </div>\n      );\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"AdmissionForm_card__2PP9y\",\"profile-pic\":\"AdmissionForm_profile-pic__3MifH\",\"margintop15px\":\"AdmissionForm_margintop15px__2UB9o\",\"width25percent\":\"AdmissionForm_width25percent__YJUpk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3F5ee\",\"root\":\"App_root__28TbV\",\"main-container\":\"App_main-container__1fJav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grow\":\"Header_grow__1xb39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawer\":\"Sidenav_drawer__2Eiob\",\"drawerpaper\":\"Sidenav_drawerpaper__2F9sN\"};"],"sourceRoot":""}